/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        numRow: numRow {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <320>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&numRow MINUS GRAVE  &numRow RS(NUMBER_1) Q  &numRow LS(NUMBER_2) W  &numRow LS(NUMBER_3) E  &numRow LS(NUMBER_4) R  &numRow LS(N5) T    &numRow LS(NUMBER_6) Y  &numRow LS(N7) U      &numRow LS(N8) I  &numRow LS(N9) O      &numRow LS(N0) P            &numRow EQUAL BACKSLASH
&kp LEFT_BRACKET     &HML LEFT_SHIFT A       &HML LEFT_CONTROL S     &HML LEFT_ALT D         &HML LEFT_COMMAND F     &kp G               &kp H                   &HMR RIGHT_COMMAND J  &HMR RIGHT_ALT K  &HMR RIGHT_CONTROL L  &HMR RIGHT_SHIFT SEMICOLON  &kp SQT
&kp RIGHT_BRACKET    &kp Z                   &kp X                   &kp C                   &kp V                   &kp B               &kp N                   &kp M                 &kp COMMA         &kp DOT               &kp FSLH                    &kp ESCAPE
                                                                     &kp DELETE              &lt 1 TAB               &kp LA(U)           &kp SPACE               &lt 2 RETURN          &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp KP_MULTIPLY       &kp MINUS             &mt AMPERSAND N7            &mt ASTERISK N8       &mt LEFT_PARENTHESIS N9     &kp PLUS          &kp LS(LEFT_BRACKET)      &kp LS(RIGHT_BRACKET)    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS        &kp LEFT_BRACKET        &kp RIGHT_BRACKET
&kp SLASH             &HML LEFT_SHIFT PLUS  &HML LEFT_CONTROL NUMBER_4  &HML LEFT_ALT N5      &HML LEFT_COMMAND NUMBER_6  &kp ENTER         &kp LS(LC(LG(LEFT_ALT)))  &HMR RIGHT_COMMAND LEFT  &HMR RIGHT_ALT DOWN   &HMR RIGHT_CONTROL UP_ARROW  &HMR RIGHT_SHIFT RIGHT  &kp DOLLAR
&kp NON_US_BACKSLASH  &kp N0                &mt EXCLAMATION NUMBER_1    &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3           &kp PERIOD        &kp LA(LS(MINUS))         &kp LS(LC(TAB))          &kp PAGE_DOWN         &kp PG_UP                    &kp LC(TAB)             &kp TILDE
                                                                        &kp TILDE             &trans                      &kp LEFT_SHIFT    &kp SPACE                 &kp LG(LS(LEFT))         &kp LS(LG(RIGHT))
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC  &kp F1            &kp F2            &kp F3                &kp F4                &kp F5             &kp F6            &kp F7        &kp F8             &kp F9            &kp F10       &kp F11
&trans   &kp LA(LC(LEFT))  &kp LA(LC(DOWN))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT))     &kp LA(LC(TAB))    &trans            &kp C_PREV    &kp K_VOLUME_DOWN  &kp LS(K_VOL_UP)  &kp C_NEXT    &kp GRAVE
&trans   &trans            &trans            &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans             &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3      &bt BT_SEL 4  &bt BT_CLR
                                             &trans                &trans                &trans             &kp C_PLAY_PAUSE  &trans        &kp C_MUTE
            >;
        };
    };
};
